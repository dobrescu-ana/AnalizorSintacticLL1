//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GeneratedCodeNamespace
{
    using System;


    public class CodeDOMCreatedClass
    {

        // Sirul de intrare dat de utilizator
        private static string[] inputArrayString;

        // Index in sirul de intrare
        private static int stringIndex;

        public static void Main()
        {
            stringIndex = 0;
            inputArrayString = Console.ReadLine().Split(' ');
            try
            {
                I();
            }
            catch (Exception e)
            {
                Console.WriteLine(e.Message);
            }
            if (inputArrayString[stringIndex] == "$")
                Console.WriteLine("Propozitie corecta");
            else
                Console.WriteLine("PropozitieIncorecta");

        }

        private static void I()
        {
            if (inputArrayString[stringIndex] == "if")
            {
                stringIndex++;
                E();
                stringIndex++;
                stringIndex++;
                I();
                stringIndex++;
                I1();
            }
            if (inputArrayString[stringIndex] == "repeat")
            {
                stringIndex++;
                I();
                stringIndex++;
                E();
            }
            if (inputArrayString[stringIndex] == "i")
            {
                F();
                stringIndex++;
                F();
            }
            else
                throw new Exception($"Caracter invalid la pozitia { stringIndex }");

        }

        private static void E()
        {
            if (inputArrayString[stringIndex] == "i")
            {
                F();
                E1();
            }
            else
                throw new Exception($"Caracter invalid la pozitia { stringIndex }");

        }

        private static void F()
        {
            if (inputArrayString[stringIndex] == "i")
            {
                stringIndex++;
                F1();
            }
            else
                throw new Exception($"Caracter invalid la pozitia { stringIndex }");

        }

        private static void L()
        {
            if (inputArrayString[stringIndex] == "i")
            {
                stringIndex++;
                Lx();
            }
            else
                throw new Exception($"Caracter invalid la pozitia { stringIndex }");

        }

        private static void I1()
        {
            if (inputArrayString[stringIndex] == ")")
            {
            }
            if (inputArrayString[stringIndex] == "else")
            {
                stringIndex++;
                I();
            }
            if (inputArrayString[stringIndex] == "until")
            {
            }
            else
                throw new Exception($"Caracter invalid la pozitia { stringIndex }");

        }

        private static void E1()
        {
            if (inputArrayString[stringIndex] == "<")
            {
                stringIndex++;
                F();
            }
            if (inputArrayString[stringIndex] == "<=")
            {
                stringIndex++;
                F();
            }
            else
                throw new Exception($"Caracter invalid la pozitia { stringIndex }");

        }

        private static void F1()
        {
            if (inputArrayString[stringIndex] == "then")
            {
            }
            if (inputArrayString[stringIndex] == "(")
            {
                stringIndex++;
                L();
                stringIndex++;
            }
            if (inputArrayString[stringIndex] == ")")
            {
            }
            if (inputArrayString[stringIndex] == "until")
            {
            }
            if (inputArrayString[stringIndex] == ":=")
            {
            }
            if (inputArrayString[stringIndex] == "<")
            {
            }
            if (inputArrayString[stringIndex] == "<=")
            {
            }
            else
                throw new Exception($"Caracter invalid la pozitia { stringIndex }");

        }

        private static void Lx()
        {
            if (inputArrayString[stringIndex] == ")")
            {
            }
            if (inputArrayString[stringIndex] == ",")
            {
                stringIndex++;
                stringIndex++;
                Lx();
            }
            else
                throw new Exception($"Caracter invalid la pozitia { stringIndex }");

        }
    }
}
